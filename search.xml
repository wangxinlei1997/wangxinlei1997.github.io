<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>结合GreenSock实现数字翻牌效果</title>
      <link href="2023/03/23/jie-he-greensock-shi-xian-shu-zi-fan-pai-xiao-guo/"/>
      <url>2023/03/23/jie-he-greensock-shi-xian-shu-zi-fan-pai-xiao-guo/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><blockquote><p>  好久没更新博客了，最近得空把githubPage挂到了cloudflare的CND上<del>（别问我为什么，问就是他免费且我穷）</del>。顺便写一篇文章，测试测试速度。</p></blockquote><p>  最近在做一个项目，需要实现一个数字翻牌的效果。于是就想到使用 GreenSock 这个库。GreenSock 是一个强大的动画库，可以实现很多复杂的动画效果，而且它的 API 也非常丰富，所以就用它来实现了这个数字翻牌的效果。</p><h1 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h1><p><img src="/images/numberFlip/numberFlip.gif" alt="数字翻牌效果"></p><h1 id="思路解析"><a href="#思路解析" class="headerlink" title="思路解析"></a>思路解析</h1><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><ol><li>视图结构<br>  可以看见，我们希望实现的效果是中间状态(如从 0-&gt;9)的多层翻牌效果。为了便于理解，我这里先使用只有一个中间过程的情况来进行分析。<br><div style="display:flex;flex-direction:row;align-items:center;justify-content:space-around"><img src="/images/numberFlip/front.png" style="height:300px" alt="正面"><img src="/images/numberFlip/back.png" style="height:300px" alt="反面"></div></li></ol><p>  上面两张图分别展示了从<code>0</code>翻动至<code>1</code>的结束状态过程。可以看到，从<code>0</code>翻至<code>1</code>，其视图主要分为 2 个主要部分，即<code>底部</code>和<code>顶部</code>（可以想象一下翻书的 3d 模型）。</p><p>  <code>底部</code>的上半部分为<code>1</code>的上半部分，下半部分则为<code>0</code>的下半部分。</p><p>  <code>顶部</code>则可以想象为一个具有正反面的 50%高度卡片，并互相叠在一起。设中间的断口为旋转轴，则中间部分(<code>顶部</code>)的正反面分别是<code>0</code>的上半部分和<code>1</code>的下半部分。</p><ol start="2"><li>动画思路<br>  想象一下翻牌的过程，可以知道<code>底部</code>是不需要做动画的。需要做动画的只有中间的<code>顶部</code>部分，即<code>顶部</code>的正反面在翻牌过程中需要做动画。从初始的<code>0</code>翻至<code>1</code>的过程中，<code>顶部</code>的正反面需要做同步动画，即从上部以中间空隙为 X 轴，向下翻转 180 度。</li><li>多张中间层动画思路<br>  如果有多张中间层，那么就需要在每张中间层上都做动画。由于需要展现错开翻牌的效果，所以每张中间层的动画需要错开一定的时间。<br>  另外，由于多张中间层的存在，所以需要考虑到层级的问题。<blockquote><ul><li>在动画执行到一半（翻转到 90 度）以前：数字小的层级高于数字大的层级。</li><li>在动画执行到一半以后：数字大的层级高于数字小的层级。</li></ul></blockquote></li></ol><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><ol><li>数据结构<table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">value</td><td align="left">Number</td><td align="left">需要展示的数字（组件入参）</td></tr><tr><td align="left">processValue</td><td align="left">Array</td><td align="left">需要展示的数字的每一位过程数字（组件内部计算值）</td></tr><tr><td align="left">uniqueId</td><td align="left">String</td><td align="left">组件唯一标识（组件内部计算值）</td></tr></tbody></table></li><li>视图结构<br>主要设计思路和层级已经在注释中给出。</li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 最外层容器，用于给出uniqId来防止gsap动画冲突 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container-nf<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[uniqueId]<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 底部的上半部分 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flip-item flip-item__base flip-item__base--top<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span> {{ processValue.slice(-1)[0] }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 底部的下半部分 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flip-item flip-item__base flip-item__base--bottom<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span> {{ processValue.slice(0, 1)[0] }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 中间的过程部分 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(i, index) in processValue.slice(0, -1)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 中间的过程部分的正面 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`${index + 1}-front-${i}`<span class="token punctuation">"</span></span>      <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`over-${index + 1}-front`<span class="token punctuation">"</span></span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flip-item flip-item__over flip-item__over--front<span class="token punctuation">"</span></span>      <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{ zIndex: 15 - index }<span class="token punctuation">"</span></span>    <span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span> {{ i }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 中间的过程部分的反面 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`${index + 1}-back-${i}`<span class="token punctuation">"</span></span>      <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`over-${index + 1}-back`<span class="token punctuation">"</span></span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flip-item flip-item__over flip-item__over--back<span class="token punctuation">"</span></span>      <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{ zIndex: 15 - index }<span class="token punctuation">"</span></span>    <span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span> {{ processValue[index + 1] }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>注意，下面的 css 中，可根据个人习惯来实现，不一定是上面我给出的写法。其中比较重要点有：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-origin">transform-origin</a>的设置，这个属性决定了元素翻转的轴心。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/backface-visibility">backface-visibility</a>的设置，这个属性决定了元素翻转后的背面是否可见。</p><pre class="language-scss" data-language="scss"><code class="language-scss"><span class="token selector">.container-nf </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">perspective</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.flip-item </span><span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Bebas<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>  <span class="token comment">// 对文字的溢出做隐藏</span>  <span class="token property">overflow-y</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token comment">// 留出中间的空隙</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% <span class="token operator">/</span> 2 <span class="token operator">-</span> 0.5px<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #409eff<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #d3d3d3<span class="token punctuation">;</span>  <span class="token comment">// 上班部分的背景和字体颜色</span>  <span class="token selector"><span class="token parent important">&amp;</span>__base--top,  <span class="token parent important">&amp;</span>__over--front </span><span class="token punctuation">{</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px 3px 0 0<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fafafa<span class="token punctuation">;</span>    <span class="token comment">// 控制字体便宜，使其垂直居中</span>    <span class="token selector">span </span><span class="token punctuation">{</span>      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment">// 下半部分的背景和字体颜色</span>  <span class="token selector"><span class="token parent important">&amp;</span>__base--bottom,  <span class="token parent important">&amp;</span>__over--back </span><span class="token punctuation">{</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0 0 3px 3px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token selector">span </span><span class="token punctuation">{</span>      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> 2.4px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment">// 底部</span>  <span class="token selector"><span class="token parent important">&amp;</span>__base </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment">// 底部上半部分</span>    <span class="token selector"><span class="token parent important">&amp;</span>--top </span><span class="token punctuation">{</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 2px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>102<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 0.25<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 底部下半部分</span>    <span class="token selector"><span class="token parent important">&amp;</span>--bottom </span><span class="token punctuation">{</span>      <span class="token comment">// 行高为0就直接在卡片里显示文字的下半不分了</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 2px 2px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>102<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 0.25<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment">// 顶部</span>  <span class="token selector"><span class="token parent important">&amp;</span>__over </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>    <span class="token comment">// 重要！背面不可见</span>    <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token comment">//顶部正面</span>    <span class="token selector"><span class="token parent important">&amp;</span>--front </span><span class="token punctuation">{</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 使其以中间空隙处为轴翻转</span>      <span class="token property">transform-origin</span><span class="token punctuation">:</span> 50% <span class="token function">calc</span><span class="token punctuation">(</span>100% <span class="token operator">+</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>--back </span><span class="token punctuation">{</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token comment">// 给出初始翻转角度，让它被藏在正面的背后</span>      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 使其以中间空隙处为轴翻转</span>      <span class="token property">transform-origin</span><span class="token punctuation">:</span> 50% -1px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ol start="3"><li>逻辑部分</li></ol><ul><li>工具函数-计算中间值</li></ul><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * @description 计算中间值 * @param {Number} start 开始值 * @param {Number} end 结束值 * @return {Array} 中间值 * @example * getProcessValues(1, 5); // [1, 2, 3, 4, 5] * @example * getProcessValues(0, 0); // [0] * @example * getProcessValues(9, 1); // [9, 0, 1] */</span><span class="token keyword">function</span> <span class="token function">getProcessValues</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>主要逻辑</li></ul><pre class="language-javascript" data-language="javascript"><code class="language-javascript">watch<span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token function">value</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>processValue <span class="token operator">=</span> <span class="token function">getProcessValues</span><span class="token punctuation">(</span>oldVal<span class="token punctuation">,</span> val<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        <span class="token comment">// 遍历所有过程值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>processValue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>          <span class="token comment">// 获取当前索引的正面和背面元素</span>          <span class="token keyword">const</span> front <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>uniqueId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> #over-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-front</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>          <span class="token keyword">const</span> back <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>uniqueId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> #over-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-back</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>          <span class="token comment">// 设置初始位置和层级，其中数字越小的层级越大（在顶部）（默认值的变化从小到大）</span>          gsap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>front<span class="token punctuation">,</span> <span class="token punctuation">{</span>            rotationX<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            zIndex<span class="token operator">:</span> <span class="token number">15</span> <span class="token operator">-</span> index<span class="token punctuation">,</span>            filter<span class="token operator">:</span> <span class="token string">'drop-shadow(0px 0px 0px rgba(102, 102, 102, 0.25))'</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>          gsap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>back<span class="token punctuation">,</span> <span class="token punctuation">{</span>            rotationX<span class="token operator">:</span> <span class="token number">180</span><span class="token punctuation">,</span>            zIndex<span class="token operator">:</span> <span class="token number">15</span> <span class="token operator">-</span> index<span class="token punctuation">,</span>            filter<span class="token operator">:</span> <span class="token string">'drop-shadow(0px 0px 0px rgba(102, 102, 102, 0.25))'</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>          <span class="token comment">// 正面动画</span>          gsap<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>front<span class="token punctuation">,</span> <span class="token punctuation">{</span>            <span class="token comment">// 根据索引设置动画延迟，实现逐个翻转的效果</span>            delay<span class="token operator">:</span> <span class="token number">0.1</span> <span class="token operator">*</span> index<span class="token punctuation">,</span>            keyframes<span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token comment">// 关键帧，分为两段，第一段是从0度旋转到-90度，第二段是从-90度旋转到-180度，由于翻到下面就不需要阴影和透明度，所以这里采用关键帧的方式</span>              <span class="token punctuation">{</span> duration<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> ease<span class="token operator">:</span> <span class="token string">'power3.in'</span><span class="token punctuation">,</span> rotationX<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">,</span> opacity<span class="token operator">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span> filter<span class="token operator">:</span> <span class="token string">'drop-shadow(0px 0px 2px rgba(102, 102, 102, 0.25))'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>              <span class="token punctuation">{</span> duration<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> ease<span class="token operator">:</span> <span class="token string">'power3.out'</span><span class="token punctuation">,</span> rotationX<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">,</span> opacity<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token function-variable function">onUpdate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>              <span class="token keyword">const</span> rotationX <span class="token operator">=</span> gsap<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>front<span class="token punctuation">,</span> <span class="token string">'rotationX'</span><span class="token punctuation">)</span>              <span class="token comment">// 当旋转角度达到-90度时，将当前元素的层级设置为当前索引+2（越大的数字层级越大）</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>rotationX <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                gsap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>front<span class="token punctuation">,</span> <span class="token punctuation">{</span>                  zIndex<span class="token operator">:</span> index <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>              <span class="token punctuation">}</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>          <span class="token comment">// 背面动画</span>          gsap<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>back<span class="token punctuation">,</span> <span class="token punctuation">{</span>            delay<span class="token operator">:</span> <span class="token number">0.1</span> <span class="token operator">*</span> index<span class="token punctuation">,</span>            keyframes<span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token punctuation">{</span> duration<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> ease<span class="token operator">:</span> <span class="token string">'power3.in'</span><span class="token punctuation">,</span> rotationX<span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> opacity<span class="token operator">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span> filter<span class="token operator">:</span> <span class="token string">'drop-shadow(0px 0px 0px rgba(102, 102, 102, 0.25))'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>              <span class="token punctuation">{</span> duration<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> ease<span class="token operator">:</span> <span class="token string">'power3.out'</span><span class="token punctuation">,</span> rotationX<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> opacity<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token function-variable function">onUpdate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>              <span class="token keyword">const</span> rotationX <span class="token operator">=</span> gsap<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>back<span class="token punctuation">,</span> <span class="token string">'rotationX'</span><span class="token punctuation">)</span>              <span class="token comment">// 同上（由于dom结构，背面就是默认在正面的后面一层的，不需要单独设置特殊值来控制了）</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>rotationX <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                gsap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>back<span class="token punctuation">,</span> <span class="token punctuation">{</span>                  zIndex<span class="token operator">:</span> index <span class="token operator">+</span> <span class="token number">2</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>              <span class="token punctuation">}</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><ol><li>其实网上有很多类似的文章和工具类库，但是我没有找到使用 GreenSock 的方案，所以就自己写了一个，希望能帮到大家。</li><li>字体大小、位置等可能需要根据实际情况做调整。</li><li>GreenSock真的很好用，API也很丰富，推荐大家使用。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 前端 </tag>
            
            <tag> GreenSock </tag>
            
            <tag> 动效 </tag>
            
            <tag> Gsap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vite插件初探-以自动部署为例</title>
      <link href="2022/07/20/vite-cha-jian-chu-tan-yi-zi-dong-bu-shu-wei-li/"/>
      <url>2022/07/20/vite-cha-jian-chu-tan-yi-zi-dong-bu-shu-wei-li/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>之前写过 Vue(Webpack)的自动打包配置，现在由于新项目使用了 Vite+Vue3+TS 的最新技术栈，旧版写法不通用了，这里重新针对 vite 写一下新脚本，并顺便了解一下 vite 脚本的基本写法。</p><h1 id="了解-Vite-脚本"><a href="#了解-Vite-脚本" class="headerlink" title="了解 Vite 脚本"></a>了解 Vite 脚本</h1><h2 id="1-插件配置-使用"><a href="#1-插件配置-使用" class="headerlink" title="1. 插件配置(使用)"></a>1. 插件配置(使用)</h2><p>在<code>vite.config.js</code>中的 plugins 中，使用数组形式配置。</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token comment">// vite.config.js</span><span class="token keyword">import</span> vitePlugin <span class="token keyword">from</span> <span class="token string">"vite-plugin-feature"</span><span class="token punctuation">;</span><span class="token keyword">import</span> rollupPlugin <span class="token keyword">from</span> <span class="token string">"rollup-plugin-feature"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vitePlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">rollupPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>注意到，这里的插件一般指函数，并通过函数参数的形式传递必要参数。</p><h2 id="2-钩子"><a href="#2-钩子" class="headerlink" title="2. 钩子"></a>2. 钩子</h2><h3 id="2-1-通用钩子-Rollup"><a href="#2-1-通用钩子-Rollup" class="headerlink" title="2.1 通用钩子(Rollup)"></a>2.1 通用钩子(Rollup)</h3><p>以下钩子在服务器启动时被调用：<br><code>options</code><br><code>buildStart</code><br>以下钩子会在每个传入模块请求时被调用：<br><code>resolveId</code><br><code>load</code><br><code>transform</code><br>以下钩子在服务器关闭时被调用：<br><code>buildEnd</code><br><code>closeBundle</code><br>请注意<code>moduleParsed</code>钩子在开发中是 不会 被调用的，因为 Vite 为了性能会避免完整的 AST 解析。</p><h2 id="3-情景应用"><a href="#3-情景应用" class="headerlink" title="3 情景应用"></a>3 情景应用</h2><p><code>apply</code>字段表示此插件在哪种情况被调用。可选值：<code>serve</code>,<code>build</code></p><h1 id="自动部署插件"><a href="#自动部署插件" class="headerlink" title="自动部署插件"></a>自动部署插件</h1><h2 id="1-环境变量的配置"><a href="#1-环境变量的配置" class="headerlink" title="1. 环境变量的配置"></a>1. 环境变量的配置</h2><p>用来储存 rsync 同步脚本</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#.env</span><span class="token assign-left variable">VITE_RSYNC</span><span class="token operator">=</span><span class="token string">'/usr/bin/rsync --archive --verbose --compress --delete -e  "ssh -i ~/.ssh/id_rsa" /Users/bryan/workspace/radar-screen/dist/ njcm@192.168.101.206:/home/njcm/AppService/h5/radar-screen/'</span></code></pre><h2 id="2-编写插件主体"><a href="#2-编写插件主体" class="headerlink" title="2. 编写插件主体"></a>2. 编写插件主体</h2><pre class="language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">/* * @Author: 王欣磊 * @Date: 2022-07-20 10:03:40 * @LastEditors: 王欣磊 * @LastEditTime: 2022-07-20 11:34:58 * @Description: * @FilePath: /radar-screen/src/plugins/runNode.ts */</span><span class="token keyword">import</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"child_process"</span><span class="token punctuation">;</span><span class="token comment">// 脚本和钩子</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">runNode</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  node<span class="token punctuation">,</span>  when<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>  node<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  when<span class="token operator">:</span> <span class="token string">"buildStart"</span> <span class="token operator">|</span> <span class="token string">"buildEnd"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    name<span class="token operator">:</span> <span class="token string">"run-node"</span><span class="token punctuation">,</span>    apply<span class="token operator">:</span> <span class="token string">"build"</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span>when<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">try</span> <span class="token punctuation">{</span>        node <span class="token operator">&amp;&amp;</span>          <span class="token function">exec</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> s<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"\n✅ 部署成功"</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>              <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="3-插件使用"><a href="#3-插件使用" class="headerlink" title="3. 插件使用"></a>3. 插件使用</h2><pre class="language-ts" data-language="ts"><code class="language-ts"><span class="token comment">// vite.config.ts</span><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> loadEnv <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vite'</span><span class="token comment">// ...</span>    plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token function">runNode</span><span class="token punctuation">(</span><span class="token punctuation">{</span> node<span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token constant">VITE_RSYNC</span><span class="token punctuation">,</span> when<span class="token operator">:</span> <span class="token string">'buildEnd'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> apply<span class="token operator">:</span> <span class="token string">'build'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">// ...</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Vue3 </tag>
            
            <tag> Vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近期回顾与前端职业前景分析</title>
      <link href="2022/07/14/jin-qi-hui-gu-yu-qian-duan-zhi-ye-qian-jing-fen-xi/"/>
      <url>2022/07/14/jin-qi-hui-gu-yu-qian-duan-zhi-ye-qian-jing-fen-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="近况"><a href="#近况" class="headerlink" title="近况"></a>近况</h1><p>  最近，软件部预离职（3/7）。<br>  多个项目并行，管理不力，各部门联动失调，各种奇形怪状的问题随着40度的高温天气一并侵袭着我们这群小伙子那颗不安的心。再加上疫情不断、薪资待遇（主要）问题，真的有点顶不住了。<br>  在大概两个月前吧，受领导指示，在软件部里部分承担所谓”软件项目经理”的职位，让我比以往更相信一个事实：这个公司存在的问题，真的很多。<br>  首先，公司在招人方面存在问题。</p><blockquote><ol><li>实习生比例过高，实际产能低下。</li><li>工资待遇水平低，很难留住员工，尤其是老员工。</li></ol></blockquote><p>  其次，公司的职称/职位分配有问题。</p><blockquote><ol><li>领导层组成十分稳固，下属员工无法看到晋升的希望。</li><li>一人身兼多职情况严重，劳动和所得很难成正比。</li></ol></blockquote><p>  再者，公司的薪资发放组成有问题。</p><blockquote><ol><li>月薪低，总想着用年终奖来说事情。但作为正常的员工，年终奖就应该好好担任”奖”的概念，而不应该大比重的决定年薪高低。</li><li>社保/公积金低，多次提交申请调整基数均无效。</li></ol></blockquote><p>  最后，领导不够重视软件部。</p><blockquote><ol><li>软件部部长身兼多职，心有余而力不足。</li><li>项目中，软件利润很低，但任务/需求却最多，这也同时导致了软件部薪资低的问题。</li></ol></blockquote><p>  以上问题可能大部分小微企业都存在，但我觉得吧，作为一个成立2年，并在不断开发新项目的公司来说，这些问题领导应该比我更加清楚，但仍然没有得到很好的解决，这对于我这个在公司辗转2年的老员工（没错，2年就算老员工）真的十分无语与寒心。</p><h1 id="前端的职业前景与分析"><a href="#前端的职业前景与分析" class="headerlink" title="前端的职业前景与分析"></a>前端的职业前景与分析</h1><p>  在公司两年以来，做了大大小小的无数个项目和招标demo，也算是接触了十有八九的前端领域了。其中包括：Vue2，3、React、HybridApp、中后台、WebGIS、WebGL、3DGIS、小程序、node后端、测试、单片机串口通讯等。<br>  但是，没错，但是。在两年的工作中，我能很明显的感受到一件事：<strong>前端这个职位，真的是开发团队里的必要但不重要的角色</strong>。原因有以下几点。</p><blockquote><ol><li>互联网教程、培训机构发达与Vue这个简单易用的渐进式框架的出现，导致前端的门槛迅速降低，只要是有一定编码基础甚至是逻辑思维稍强的人，都能很快的入门前端，并能在项目开发中承担一定的角色。</li><li>很多企业开发进度快，周期短，在用人方面很少考察开发技术员的真正实力，比如：很少有公司在面试时问框架源码和实现原理。往往，只要你会公司在用的框架，并有独立开发的能力，往往也就够用了。毕竟，一个中后台系统的前端，再不济也出不了像后端那么多奇形怪状的问题和需求。</li><li>前端的领域很广，导致前端人很难专注于一个方面。前端工程师往往会处于一种”会的很多，但都不精”的尴尬处境。</li><li>只管埋头画页面，很少接触到真正的业务与需求端。</li></ol></blockquote><p>  那么，前端人终究怎样找到自己的前景与方向呢？我结合目前的市场得出了以下结论：专注某个前端领域做到极致，或者转行。<br>  大家可能都听过很多后端大佬、算法大佬、管理大佬，但能被人记住的前端名人，真的是少之又少。这其中很大一部分原因就在于我上面提到的：<strong>前端这个职位，真的是开发团队里的必要但不重要的角色</strong>。前端人往往会在30-35岁左右另寻出路，大多都转行成了管理或者后端岗；当然也有一部分真正热爱前端的fronter们，毅然得站在这个美丽又脆弱的领域里，绽放着属于自己的光芒。</p><h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>  打算明年去考PMP了，不管有没有用，先是提升一下自己的管理理论水平吧。<br>  好几个熟悉的同事都要走了，心情真的很复杂。祝他们前程似锦吧。<br>  再会！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MMSI-国籍/国旗一览表</title>
      <link href="2022/07/14/mmsi-guo-ji-guo-qi-yi-lan-biao/"/>
      <url>2022/07/14/mmsi-guo-ji-guo-qi-yi-lan-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近公司后端出现了使用MMSI匹配船舶国籍数据的错误问题，原因是参考的MMSI对照表不全。因此我在这重新开发整理了一份列表，采用vite+Vue3打造。</p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><h3 id="MID"><a href="#MID" class="headerlink" title="MID"></a>MID</h3><p>Maritime identification digits, 表示船舶国籍代码，一般由MMSI前三位构成。</p><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p><a href="https://github.com/wangxinlei1997/mid-data-set">wangxinlei1997/mid-data-set</a></p><h1 id="直链"><a href="#直链" class="headerlink" title="直链"></a>直链</h1><p><a href="http://xiaob.work/mid-data-set/">MMSI对照表</a></p>]]></content>
      
      
      <categories>
          
          <category> 轮子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue项目Build后自动打包</title>
      <link href="2021/12/14/vue-xiang-mu-build-hou-zi-dong-da-bao/"/>
      <url>2021/12/14/vue-xiang-mu-build-hou-zi-dong-da-bao/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> filemanager-webpack-plugin</code></pre><h2 id="2-vue-config-js-配置"><a href="#2-vue-config-js-配置" class="headerlink" title="2. vue.config.js 配置"></a>2. vue.config.js 配置</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> FileManagerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'filemanager-webpack-plugin'</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token comment">// isProd 一般为环境判断 如 process.env.NODE_ENV === 'production'</span>isProd <span class="token operator">&amp;&amp;</span>  plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>    <span class="token keyword">new</span> <span class="token class-name">FileManagerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      events<span class="token operator">:</span> <span class="token punctuation">{</span>        onEnd<span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token comment">// 首先先删除之前的文件</span>          <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'./dist.zip'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// 压缩 源-&gt;目的地</span>          archive<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>              source<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              destination<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./dist.zip'</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>          <span class="token punctuation">]</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token operator">...</span><span class="token keyword">const</span> vueConfig <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token operator">...</span>  configureWebpack<span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token operator">...</span>    plugins<span class="token punctuation">,</span>    <span class="token operator">...</span>  <span class="token punctuation">}</span>  <span class="token operator">...</span><span class="token punctuation">}</span></code></pre><h2 id="3-filemanager-webpack-plugin-简易教程"><a href="#3-filemanager-webpack-plugin-简易教程" class="headerlink" title="3. filemanager-webpack-plugin 简易教程"></a>3. filemanager-webpack-plugin 简易教程</h2><blockquote><p><a href="https://github.com/gregnb/filemanager-webpack-plugin#readme">Github</a></p></blockquote><h3 id="1-Options"><a href="#1-Options" class="headerlink" title="1. Options"></a>1. Options</h3><pre class="language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">new FileManagerPlugin({  events: {    onStart: {}, //打包前    onEnd: {}, //打包结束后  },  runTasksInSeries: false,  runOnceInWatchMode: false,});</code></pre><h3 id="2-Actions"><a href="#2-Actions" class="headerlink" title="2. Actions"></a>2. Actions</h3><ul><li>Copy<ul><li>source[string] - 源(文件/目录/glob)</li><li>destination[string] - 文件/目录</li><li>options [‘object`] - copy options<ul><li>flat: [Boolean]</li><li>preserveTimestamps: [Boolean]</li><li>overwite: [Boolean]</li></ul></li><li>globOptions [object] - options to forward to glob options</li></ul></li><li>Delete</li><li>Move<ul><li>source[string] - a file or a directory or a glob</li><li>destination[string] - a file or a directory.</li></ul></li><li>Mkdir</li><li>Archive<ul><li>source[string] - a file or a directory or a glob</li><li>destination[string] - a file.</li><li>format[string] - Optional. Defaults to extension in destination filename.</li><li>options[object] - Refer <a href="https://www.archiverjs.com/archiver">https://www.archiverjs.com/archiver</a></li></ul></li></ul><h3 id="3-官方示例"><a href="#3-官方示例" class="headerlink" title="3. 官方示例"></a>3. 官方示例</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// webpack.config.js:</span><span class="token keyword">const</span> FileManagerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"filemanager-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  <span class="token comment">// ...rest of the config</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">FileManagerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      events<span class="token operator">:</span> <span class="token punctuation">{</span>        onEnd<span class="token operator">:</span> <span class="token punctuation">{</span>          copy<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span> source<span class="token operator">:</span> <span class="token string">"/path/fromfile.txt"</span><span class="token punctuation">,</span> destination<span class="token operator">:</span> <span class="token string">"/path/tofile.txt"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> source<span class="token operator">:</span> <span class="token string">"/path/**/*.js"</span><span class="token punctuation">,</span> destination<span class="token operator">:</span> <span class="token string">"/path"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>          move<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span> source<span class="token operator">:</span> <span class="token string">"/path/from"</span><span class="token punctuation">,</span> destination<span class="token operator">:</span> <span class="token string">"/path/to"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> source<span class="token operator">:</span> <span class="token string">"/path/fromfile.txt"</span><span class="token punctuation">,</span> destination<span class="token operator">:</span> <span class="token string">"/path/tofile.txt"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"/path/to/file.txt"</span><span class="token punctuation">,</span> <span class="token string">"/path/to/directory/"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          mkdir<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"/path/to/directory/"</span><span class="token punctuation">,</span> <span class="token string">"/another/directory/"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          archive<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span> source<span class="token operator">:</span> <span class="token string">"/path/from"</span><span class="token punctuation">,</span> destination<span class="token operator">:</span> <span class="token string">"/path/to.zip"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> source<span class="token operator">:</span> <span class="token string">"/path/**/*.js"</span><span class="token punctuation">,</span> destination<span class="token operator">:</span> <span class="token string">"/path/to.zip"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> source<span class="token operator">:</span> <span class="token string">"/path/fromfile.txt"</span><span class="token punctuation">,</span> destination<span class="token operator">:</span> <span class="token string">"/path/to.zip"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>              source<span class="token operator">:</span> <span class="token string">"/path/fromfile.txt"</span><span class="token punctuation">,</span>              destination<span class="token operator">:</span> <span class="token string">"/path/to.zip"</span><span class="token punctuation">,</span>              format<span class="token operator">:</span> <span class="token string">"tar"</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>              source<span class="token operator">:</span> <span class="token string">"/path/fromfile.txt"</span><span class="token punctuation">,</span>              destination<span class="token operator">:</span> <span class="token string">"/path/to.tar.gz"</span><span class="token punctuation">,</span>              format<span class="token operator">:</span> <span class="token string">"tar"</span><span class="token punctuation">,</span>              options<span class="token operator">:</span> <span class="token punctuation">{</span>                gzip<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                gzipOptions<span class="token operator">:</span> <span class="token punctuation">{</span>                  level<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                globOptions<span class="token operator">:</span> <span class="token punctuation">{</span>                  <span class="token comment">// https://github.com/Yqnn/node-readdir-glob#options</span>                  dot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>              <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Vue </tag>
            
            <tag> WebPack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道格拉斯-普克算法(Ramer–Douglas–Peucker)曲线降采样</title>
      <link href="2021/05/13/dao-ge-la-si-pu-ke-suan-fa-ramer-douglas-peucker-qu-xian-jiang-cai-yang/"/>
      <url>2021/05/13/dao-ge-la-si-pu-ke-suan-fa-ramer-douglas-peucker-qu-xian-jiang-cai-yang/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在最近开发的某系统中，有一需求是在map上显示路径，并在路径上分段打箭头、点和文字信息（时间）。</p><blockquote><p>测试环境（mock数据）理想效果</p></blockquote><p><img src="/images/ramer1.png"><br>看起来还不错是吧<br>然鹅，但由于真实环境点位数据过于密集，导致显示效果十分魔幻，看起来是这样婶的。（害）<br><img src="/images/ramer2.png"><br>然后呢，突然想起来之前大学时侯做acm的一个路径拟合题和这个需求很类似，就在此分享一下吧<br><del>（虽然好像这个算法是由后端实现）</del>。</p><h1 id="Ramer–Douglas–Peucker算法"><a href="#Ramer–Douglas–Peucker算法" class="headerlink" title="Ramer–Douglas–Peucker算法"></a>Ramer–Douglas–Peucker算法</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p><a href="https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm">Ramer–Douglas–Peucker</a>算法，又称道格拉斯-普克算法算法或迭代端点拟合算法，是一种将由多点组成的曲线（折线）降采样为点数较小的类似曲线（折线）的算法。</p><h2 id="2-算法思想"><a href="#2-算法思想" class="headerlink" title="2. 算法思想"></a>2. 算法思想</h2><p>起始曲线是一组<strong>有序</strong>的点或线，距离维度 ε（可以理解为拟合度） &gt; 0。<br>该算法采用递归思想。最初，运算点集合为所有点。首先，拟合出第一个点和最后一个点的直线，计算当前运算集中所有点到这条直线的距离（循环），如果这个距离(d)&lt;ε,那么可以将除了首尾的两个点以外的所有点去除,形成一个简单线段。否则，如果距离(d)&gt;ε，这个点将被保留，并由此点将原有运算集划分为两个子集，并递归运算这个流程。<br>当递归完成后，可以生成一条新的输出曲线，该曲线由所有且仅由那些被标记为保留的点组成。<br><em>说了这些，有轻微阅读障碍的XDM估计已经躺下了（比如我），所以这里放上一张图来帮助理解。</em><br><img src="/images/ramer3.gif"></p><h2 id="3-参数控制"><a href="#3-参数控制" class="headerlink" title="3. 参数控制"></a>3. 参数控制</h2><p>ε(阈值)，越小，直线越平滑，越大，直线越锐利。<br><img src="/images/ramer4.gif"></p><h2 id="4-伪代码"><a href="#4-伪代码" class="headerlink" title="4. 伪代码"></a>4. 伪代码</h2><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">道格拉斯</span><span class="token punctuation">(</span><span class="token parameter">运算点集<span class="token punctuation">,</span> 阈值</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 找出两点间点的最大距离</span>  最大距离 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  距离最大点位置 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  length <span class="token operator">=</span> 运算集<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    d <span class="token operator">=</span> <span class="token function">计算点到直线距离</span><span class="token punctuation">(</span>      运算点集<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token function">拟合直线方程</span><span class="token punctuation">(</span>运算点集<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> 运算点集<span class="token punctuation">[</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>d <span class="token operator">&gt;</span> 最大距离<span class="token punctuation">)</span> <span class="token punctuation">{</span>      距离最大点位置 <span class="token operator">=</span> i<span class="token punctuation">;</span>      最大距离 <span class="token operator">=</span> d<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  结果输出 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 如果最大距离小于阈值,就拟合</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>最大距离 <span class="token operator">&gt;</span> 阈值<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 继续计算</span>    左子集 <span class="token operator">=</span> <span class="token function">道格拉斯</span><span class="token punctuation">(</span>运算点集合<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> 距离最大点位置<span class="token punctuation">)</span><span class="token punctuation">,</span> 阈值<span class="token punctuation">)</span><span class="token punctuation">;</span>    右子集 <span class="token operator">=</span> <span class="token function">道格拉斯</span><span class="token punctuation">(</span>运算点集<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>距离最大点位置<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">,</span> 阈值<span class="token punctuation">)</span><span class="token punctuation">;</span>    结果输出 <span class="token operator">=</span> 左子集<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>右子集<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token comment">// 拟合</span>    结果输出 <span class="token operator">=</span> <span class="token punctuation">[</span>运算点集<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> 运算点集<span class="token punctuation">[</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> 结果输出<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="5-后记"><a href="#5-后记" class="headerlink" title="5.后记"></a>5.后记</h2><ul><li>算法复杂度O(n log n) </li></ul><hr><p>End</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cesium之Vue环境配置与demo运行（一）</title>
      <link href="2021/05/07/cesium-zhi-vue-huan-jing-pei-zhi-yu-demo-yun-xing/"/>
      <url>2021/05/07/cesium-zhi-vue-huan-jing-pei-zhi-yu-demo-yun-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近公司有新项目（据说是关于数字孪生），需要用到Cesium来展示3d模型。由于我技术栈是Vue，故在此记录环境配置、安装相关的一些要点。</p><h2 id="Vue项目创建"><a href="#Vue项目创建" class="headerlink" title="Vue项目创建"></a>Vue项目创建</h2><blockquote><p>本次Demo尝试使用Vue3来搭建。</p></blockquote><ol><li>通过Vue-CLI ^4.5+ 脚手架来创建V3项目<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装vli(按需)</span><span class="token function">yarn</span> global <span class="token function">add</span> @vue/cli<span class="token comment"># OR</span><span class="token function">npm</span> <span class="token function">install</span> -g @vue/cli<span class="token comment"># 创建项目</span>vue create hello-world</code></pre>创建过程中注意选择V3即可，其他配置按自己喜好。</li><li>项目创建完成后，在项目下安装sass相关依赖。(按需)<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> node-sass<span class="token function">npm</span> <span class="token function">install</span> sass-loader</code></pre>由于node-sass的版本和nodejs版本依赖关系比较魔幻，故在安装的时候需要注意和本地的node版本匹配。下放依赖匹配表。<table><thead><tr><th align="center">NodeJS</th><th align="center">Supported node-sass version</th><th align="center">Node Module</th></tr></thead><tbody><tr><td align="center">Node 15</td><td align="center">5.0+</td><td align="center">88</td></tr><tr><td align="center">Node 14</td><td align="center">4.14+</td><td align="center">83</td></tr><tr><td align="center">Node 13</td><td align="center">4.13+, &lt;5.0</td><td align="center">79</td></tr><tr><td align="center">Node 12</td><td align="center">4.12+</td><td align="center">72</td></tr><tr><td align="center">Node 11</td><td align="center">4.10+, &lt;5.0</td><td align="center">67</td></tr><tr><td align="center">Node 10</td><td align="center">4.9+</td><td align="center">64</td></tr><tr><td align="center">Node 8</td><td align="center">4.5.3+, &lt;5.0</td><td align="center">57</td></tr><tr><td align="center">Node &lt;8</td><td align="center">&lt;5.0</td><td align="center">&lt;57</td></tr></tbody></table></li><li>安装cesium<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> cesium</code></pre></li><li>安装webpack相关依赖<br>copy-webpack-plugin<br>css-loader”<br>html-webpack-plugin<br>strip-pragma-loader<br>style-loader<br>uglifyjs-webpack-plugin<br>url-loader<br>webpack<br>webpack-cli<br>webpack-dev-server</li><li>在项目文件夹下新建vue.config.js<pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> CopyWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'copy-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  publicPath<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"production"</span> <span class="token operator">?</span> <span class="token string">"./"</span> <span class="token operator">:</span> <span class="token string">"./"</span><span class="token punctuation">,</span>  outputDir<span class="token operator">:</span> <span class="token string">"dist"</span><span class="token punctuation">,</span>  assetsDir<span class="token operator">:</span> <span class="token string">"static"</span><span class="token punctuation">,</span>  lintOnSave<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否开启eslint保存检测</span>  productionSourceMap<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否在构建生产包时生成sourcdeMap</span>  <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    config<span class="token punctuation">.</span>resolve<span class="token punctuation">.</span>alias      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"@"</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"@v"</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"src/views"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"@c"</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"src/components"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"@u"</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"src/utils"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"@s"</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"src/service"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 别名配置 */</span>    config<span class="token punctuation">.</span>optimization<span class="token punctuation">.</span><span class="token function">runtimeChunk</span><span class="token punctuation">(</span><span class="token string">"single"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token comment">// host: "localhost",</span>    <span class="token comment">/* 本地ip地址 */</span>    <span class="token comment">//host: "192.168.1.107",</span>    host<span class="token operator">:</span> <span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> <span class="token comment">//局域网和本地访问</span>    port<span class="token operator">:</span> <span class="token string">"8080"</span><span class="token punctuation">,</span>    hot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">/* 自动打开浏览器 */</span>    open<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    overlay<span class="token operator">:</span> <span class="token punctuation">{</span>      warning<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      error<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment">/* 跨域代理 */</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  configureWebpack<span class="token operator">:</span><span class="token punctuation">{</span>      plugins<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// Copy Cesium Assets, Widgets, and Workers to a static directory</span>    <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        patterns<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token operator">:</span> <span class="token string">'node_modules/cesium/Build/Cesium/Workers'</span><span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token string">'Workers'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token operator">:</span> <span class="token string">'node_modules/cesium/Build/Cesium/ThirdParty'</span><span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token string">'ThirdParty'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token operator">:</span> <span class="token string">'node_modules/cesium/Build/Cesium/Assets'</span><span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token string">'Assets'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token operator">:</span> <span class="token string">'node_modules/cesium/Build/Cesium/Widgets'</span><span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token string">'Widgets'</span> <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token comment">// Define relative base path in cesium for loading assets</span>        <span class="token constant">CESIUM_BASE_URL</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token punctuation">}</span>  <span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></li><li>在你的HelloWorld里面写cesium相关逻辑<blockquote><p>这里我直接贴上我的HelloWorld<br>PS: 其中token自己在Cesium官网里面申请就行了</p></blockquote><pre class="language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- * @Author: 王欣磊 * @Date: 2021-05-06 11:17:20 * @LastEditors: 王欣磊 * @LastEditTime: 2021-05-06 15:57:10 * @Description:  * @FilePath: /test3/src/components/HelloWorld.vue--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cesiumContainer<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickChoose<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{{ message }} {{item.title}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>      For a guide and recipes on how to configure / customize this project,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>      check out the      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cli.vuejs.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>vue-cli documentation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Installed CLI Plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-babel<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>babel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-eslint<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>eslint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Essential Links<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://vuejs.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Core Docs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://forum.vuejs.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Forum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://chat.vuejs.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Community Chat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://twitter.com/vuejs<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Twitter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://news.vuejs.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>News<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Ecosystem<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://router.vuejs.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>vue-router<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://vuex.vuejs.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>vuex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github.com/vuejs/vue-devtools#vue-devtools<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>vue-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://vue-loader.vuejs.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>vue-loader<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github.com/vuejs/awesome-vue<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>awesome-vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Cesium <span class="token keyword">from</span> <span class="token string">'cesium'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"cesium/Build/Cesium/Widgets/widgets.css"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref<span class="token punctuation">,</span>reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token operator">:</span> <span class="token string">'HelloWorld'</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">{</span>    msg<span class="token operator">:</span> String  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'choose'</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>title<span class="token operator">:</span><span class="token string">'name'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>        <span class="token comment">// Your access token can be found at: https://cesium.com/ion/tokens.</span>    Cesium<span class="token punctuation">.</span>Ion<span class="token punctuation">.</span>defaultAccessToken <span class="token operator">=</span> <span class="token string">'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlYWY5NzY4Yy1mY2YyLTRmYTgtYjAyMy1hMGY3MTllZmVmNDUiLCJpZCI6NTQ4ODMsImlhdCI6MTYyMDI3MzA1NX0.M-B79nr0L9j3L3RmNwmGisLrQz5ux7vRKv7TbP4qxkU'</span><span class="token punctuation">;</span>    <span class="token comment">// Initialize the Cesium Viewer in the HTML element with the `cesiumContainer` ID.</span>    <span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">'cesiumContainer'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>      terrainProvider<span class="token operator">:</span> Cesium<span class="token punctuation">.</span><span class="token function">createWorldTerrain</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Add Cesium OSM Buildings, a global 3D buildings layer.</span>    <span class="token comment">// eslint-disable-next-line no-unused-vars</span>    <span class="token keyword">const</span> buildingTileset <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Cesium<span class="token punctuation">.</span><span class="token function">createOsmBuildings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// Fly the camera to San Francisco at the given longitude, latitude, and height.</span>    viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">flyTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      destination <span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">122.4175</span><span class="token punctuation">,</span> <span class="token number">37.655</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      orientation <span class="token operator">:</span> <span class="token punctuation">{</span>        heading <span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        pitch <span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span>item<span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span><span class="token punctuation">{</span>    <span class="token function">clickChoose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token operator">+=</span><span class="token string">'0'</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>title<span class="token operator">+=</span><span class="token string">'p'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">h3</span> <span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 40px 0 0<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ul</span> <span class="token punctuation">{</span>  <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">li</span> <span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #42b983<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre></li><li>运行devServer就完事了<br><img src="/images/cesium-demo.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Vue </tag>
            
            <tag> GIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热区扩大-Vue组件</title>
      <link href="2021/02/20/re-qu-kuo-da-vue-zu-jian/"/>
      <url>2021/02/20/re-qu-kuo-da-vue-zu-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="废话不多说直接上代码"><a href="#废话不多说直接上代码" class="headerlink" title="废话不多说直接上代码"></a>废话不多说直接上代码</h2><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>expand<span class="token punctuation">'</span>,area]<span class="token punctuation">"</span></span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emit<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    name<span class="token operator">:</span> <span class="token string">"ExpandClickArea"</span><span class="token punctuation">,</span>    props<span class="token operator">:</span> <span class="token punctuation">{</span>      area<span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token comment">//small,normal,big,large</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"normal"</span><span class="token punctuation">,</span>        type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token function">emit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"expandOnClick"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">  <span class="token selector">.parent</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">overflow-x</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.expand</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.normal</span> <span class="token punctuation">{</span>    <span class="token property">top</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.small</span> <span class="token punctuation">{</span>    <span class="token property">top</span><span class="token punctuation">:</span> -5px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> -5px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -5px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -5px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.big</span> <span class="token punctuation">{</span>    <span class="token property">top</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.large</span> <span class="token punctuation">{</span>    <span class="token property">top</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 轮子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Vue </tag>
            
            <tag> 轮子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NASA&#39;s next flight to the Red Planet - NASA 把你的名字送上火星计划</title>
      <link href="2021/02/19/nasa-s-next-flight-to-the-red-planet-nasa-2026-huo-xing-ji-hua/"/>
      <url>2021/02/19/nasa-s-next-flight-to-the-red-planet-nasa-2026-huo-xing-ji-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="2021年的成功登陆"><a href="#2021年的成功登陆" class="headerlink" title="2021年的成功登陆"></a>2021年的成功登陆</h2><p>在2021年2月18日，NASA“毅力号”漫游器成功登陆火星，其主要任务是设法采集火星岩石和土壤样本，然后将他们带回地球。<br>随着火箭一起飞往火星的，还有400多万个地球人的名字。<br>从2020年5月22日开始，NASA官网就开始收集名字。对于这些名字，美国宇航局的喷气推进实验室（JPL）成员会使用电子束将所有提交的名字蚀刻到硅芯片上，每个人的名字大约只占用75纳米（约为人类发丝直径1/1000）的空间。因此，在一个芯片上最多能写满100万个名字。<br>从20年5月22日开始，已有超过400万人报名了此项目，从官网活动的开放时间额来看，刻写名字的芯片不会只有一片。</p><h2 id="2026年的申请渠道"><a href="#2026年的申请渠道" class="headerlink" title="2026年的申请渠道"></a>2026年的申请渠道</h2><p>现在官网的申请渠道仍可以使用，其中增加的名字大概率会在2026年的NASA火星计划中随着新火箭飞往火星。<br>错过“毅力号”的XDM，现在可以行动起来啦！</p><blockquote><p><a href="https://mars.nasa.gov/participate/send-your-name/future">申请渠道链接</a><br>以下附我的2026年火星飞行计划(误)</p></blockquote><iframe src="https://mars.nasa.gov/layout/embed/send-your-name/future/certificate/?cn=521339539951" width="980" height="410" frameborder="0" loading="lazy" allowfullscreen=""></iframe>]]></content>
      
      
      <categories>
          
          <category> 日常杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS奇淫技巧</title>
      <link href="2021/02/03/css-qi-yin-ji-qiao/"/>
      <url>2021/02/03/css-qi-yin-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在日常实现一些功能的时候，一些复杂的界面/交互需求往往能使用几行 CSS 来实现，再次做相关记录，以便之后检索。</p><h3 id="css-半圆画法（圆边框）"><a href="#css-半圆画法（圆边框）" class="headerlink" title="css 半圆画法（圆边框）"></a>css 半圆画法（圆边框）</h3><pre class="language-css" data-language="css"><code class="language-css"><span class="token comment">/*右半圆*/</span><span class="token property">width</span><span class="token punctuation">:</span> 9px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 0 18px 18px 0<span class="token punctuation">;</span><span class="token comment">/*background: #any;*/</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ff4b33<span class="token punctuation">;</span><span class="token property">border-left</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></code></pre><h3 id="flex-布局下-space-between-space-around-最后一行左对齐"><a href="#flex-布局下-space-between-space-around-最后一行左对齐" class="headerlink" title="flex 布局下 space-between / space-around 最后一行左对齐"></a>flex 布局下 space-between / space-around 最后一行左对齐</h3><pre class="language-css" data-language="css"><code class="language-css"><span class="token comment">/* 最后一项margin-right:auto */</span><span class="token selector">.item:last-child</span> <span class="token punctuation">{</span>  <span class="token property">margin-right</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="使用-mask-或-clip-path-的时候同时显示阴影"><a href="#使用-mask-或-clip-path-的时候同时显示阴影" class="headerlink" title="使用 mask 或 clip-path 的时候同时显示阴影"></a>使用 mask 或 clip-path 的时候同时显示阴影</h3><p><del>box-shadow 无效</del></p><ol><li><p>在父元素上使用 filter 滤镜：drop-shadow</p></li><li><p>clip 或 mask 在源组件上，而不是在父组件上</p></li><li><p>drop-shadow 和 box-shadow 的区别：</p><ul><li>box-shadow 为盒子模型下的阴影渲染</li><li>drop-shadow 会在非透明像素下投下阴影</li></ul></li></ol><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag-wrap<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> Tag <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.tag-wrap</span> <span class="token punctuation">{</span>  <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">drop-shadow</span><span class="token punctuation">(</span>-1px 6px 3px <span class="token function">rgba</span><span class="token punctuation">(</span>50<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.tag</span> <span class="token punctuation">{</span>  <span class="token property">background</span><span class="token punctuation">:</span> #fb8c00<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #222<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 2rem 3rem 2rem 4rem<span class="token punctuation">;</span>  <span class="token property">font</span><span class="token punctuation">:</span> bold 32px system-ui<span class="token punctuation">;</span>  <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>30px 0%<span class="token punctuation">,</span> 100% 0%<span class="token punctuation">,</span> 100% 100%<span class="token punctuation">,</span> 30px 100%<span class="token punctuation">,</span> 0 50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="图片宽高比自适应"><a href="#图片宽高比自适应" class="headerlink" title="图片宽高比自适应"></a>图片宽高比自适应</h3><p>父元素使用 padding 来撑开布局，子元素 absolute 定位宽高 100%</p><ul><li>原理：padding 大小是相对于父元素的 width</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS奇淫技巧</title>
      <link href="2021/02/03/js-qi-yin-ji-qiao/"/>
      <url>2021/02/03/js-qi-yin-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文中记录了 js 的一些技巧/新特性</p><h2 id="选择-反选对象中的元素"><a href="#选择-反选对象中的元素" class="headerlink" title="选择/反选对象中的元素"></a>选择/反选对象中的元素</h2><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">pick</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> keys</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> keys    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>k <span class="token keyword">in</span> obj <span class="token operator">?</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">:</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token string">"accounts.id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token string">"client.name"</span><span class="token operator">:</span> <span class="token string">"John Doe"</span><span class="token punctuation">,</span>  <span class="token string">"bank.code"</span><span class="token operator">:</span> <span class="token string">"MDAKW213"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token punctuation">[</span>  row<span class="token punctuation">,</span>  <span class="token punctuation">{</span> <span class="token string">"accounts.id"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"client.name"</span><span class="token operator">:</span> <span class="token string">"Steve Doe"</span><span class="token punctuation">,</span> <span class="token string">"bank.code"</span><span class="token operator">:</span> <span class="token string">"STV12JB"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">pick</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"client.name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 取到了 client name</span>table<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">pick</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"client.name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 取到了一系列 client name</span><span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> keys</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>keys<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">:</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 或者, 利用 pick</span><span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> keys</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> vkeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>keys<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">pick</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> vkeys<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; {c: 4}</span></code></pre><h2 id="只执行一次的函数（闭包法）"><a href="#只执行一次的函数（闭包法）" class="headerlink" title="只执行一次的函数（闭包法）"></a>只执行一次的函数（闭包法）</h2><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> called <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>called<span class="token punctuation">)</span> <span class="token punctuation">{</span>      called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="相同参数的函数缓存结果"><a href="#相同参数的函数缓存结果" class="headerlink" title="相同参数的函数缓存结果"></a>相同参数的函数缓存结果</h2><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">cached</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> cache <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">cachedFn</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cache<span class="token punctuation">[</span>str<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>      cache<span class="token punctuation">[</span>str<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> cache<span class="token punctuation">[</span>str<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="compose嵌套式函数链式调用优化"><a href="#compose嵌套式函数链式调用优化" class="headerlink" title="compose嵌套式函数链式调用优化"></a>compose嵌套式函数链式调用优化</h2><ul><li><p>依次执行函数的时候，往往使用以下基本写法</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">fun3</span><span class="token punctuation">(</span><span class="token function">fun2</span><span class="token punctuation">(</span><span class="token function">fun1</span><span class="token punctuation">(</span><span class="token string">'arg'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>这种写法一般能满足基本需要。但是如果在嵌套层数更多的情况下，代码就会变得很复杂、难以维护。</p></li><li><p>在Redux内部compose的写法如下</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>funs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> funcs<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> newfunc <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>fun3<span class="token punctuation">,</span>fun2<span class="token punctuation">,</span>fun1<span class="token punctuation">)</span><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">newfunc</span><span class="token punctuation">(</span><span class="token string">'arg'</span><span class="token punctuation">)</span></code></pre><p>在此函数中，重点为<code>reduce</code> 方法。在使用此方法时，将会依次选用第1个、第2个；第2个、第3个fun，并用后一个函数的执行结果作为前一个的参数，从而实现需要的依次执行效果。</p><p>在本例中，执行的顺序如下：</p><ol><li><code>fun3(fun2(...args)) -&gt; fun3(fun2(fun1(...args)))</code></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> JS </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
